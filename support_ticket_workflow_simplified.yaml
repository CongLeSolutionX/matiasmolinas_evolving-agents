scenario_name: Support Ticket Processing System
domain: customer_support
description: A system to analyze support tickets, classify them, and route them appropriately

steps:
  # Define components
  - type: "DEFINE"
    item_type: "TOOL"
    name: "TicketAnalyzer"
    description: "Tool that analyzes support tickets"
    code_snippet: |
      def analyze_ticket(ticket_text):
          # Analyze ticket text
          return analysis_results

  - type: "DEFINE"
    item_type: "TOOL"
    name: "PriorityClassifier"
    description: "Classifies ticket by priority"
    code_snippet: |
      def classify_priority(analysis_results):
          # Classify priority
          return priority

  - type: "DEFINE"
    item_type: "TOOL"
    name: "CategoryIdentifier"
    description: "Identifies main category of the issue"
    code_snippet: |
      def identify_category(analysis_results):
          # Identify category
          return category

  - type: "DEFINE"
    item_type: "TOOL"
    name: "InformationExtractor"
    description: "Extracts key information from the ticket"
    code_snippet: |
      def extract_information(analysis_results):
          # Extract information
          return customer_id, product, specific_issue

  - type: "DEFINE"
    item_type: "TOOL"
    name: "ResponseGenerator"
    description: "Generates a suggested response based on past tickets"
    code_snippet: |
      def generate_response(category, specific_issue):
          # Generate response
          return response

  - type: "DEFINE"
    item_type: "TOOL"
    name: "TicketRouter"
    description: "Routes the ticket to the appropriate department"
    code_snippet: |
      def route_ticket(category):
          # Route ticket
          return department

  # Create components
  - type: "CREATE"
    item_type: "TOOL"
    name: "TicketAnalyzer"

  - type: "CREATE"
    item_type: "TOOL"
    name: "PriorityClassifier"

  - type: "CREATE"
    item_type: "TOOL"
    name: "CategoryIdentifier"

  - type: "CREATE"
    item_type: "TOOL"
    name: "InformationExtractor"

  - type: "CREATE"
    item_type: "TOOL"
    name: "ResponseGenerator"

  - type: "CREATE"
    item_type: "TOOL"
    name: "TicketRouter"

  # Execute workflow
  - type: "EXECUTE"
    item_type: "AGENT"
    name: "SupportTicketManager"
    user_input: "Process this ticket: {ticket_text}"
    code_snippet: |
      analysis_results = TicketAnalyzer.analyze_ticket(ticket_text)
      priority = PriorityClassifier.classify_priority(analysis_results)
      category = CategoryIdentifier.identify_category(analysis_results)
      customer_id, product, specific_issue = InformationExtractor.extract_information(analysis_results)
      response = ResponseGenerator.generate_response(category, specific_issue)
      department = TicketRouter.route_ticket(category)
      return {
          "priority": priority,
          "category": category,
          "customer_id": customer_id,
          "product": product,
          "specific_issue": specific_issue,
          "response": response,
          "department": department
      }